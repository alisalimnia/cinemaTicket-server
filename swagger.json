{
  "openapi": "3.0.0",
  "info": {
    "title": "Cinema Ticket Server API",
    "description": "This is a clone api of cinematicket.org. We tried to implement as many features as we can.",
    "contact": {
      "name": "Mahdi Hashemi",
      "url": "https://github.com/mahdiHash",
      "email": "mahdihashemi.code@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "localhost:12000/"
    }
  ],
  "paths": {
    "/getapikey": {
      "get": {
        "security": [{}],
        "description": "Get an api key from the server. You need to provide this key in \"apikey\" header of your requests headers.",
        "summary": "Api key for other requests",
        "operationId": "apikey",
        "responses": {
          "200": {
            "description": "key generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "flkajfdldfasfd8af9d8f9adsfd9af9d89fa9dsf9daf89d"
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "security": [
          { "apikey": ["apikey"] }
        ],
        "description": "This route is used for user signup.",
        "summary": "User signup",
        "requestBody": {
          "description": "The \"tel\" field must contain 11 characters and the \"password\" field must contain at least 6 characters. \"password\" and \"repeatPass\" fields must be the same.",
          "content": {
            "body": {
              "schema": {
                "type": "object",
                "properties": {
                  "tel": {
                    "type": "string",
                    "description": "This field must contain 11 characters.",
                    "example": "09120000000"
                  },
                  "password": {
                    "type": "string",
                    "description": "This field must contain at least 6 characters.",
                    "example": "someRand0mPa33"
                  },
                  "repeatPass": {
                    "type": "string",
                    "description": "This field must be the same as password field.",
                    "example": "someRand0mPa33"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response contains two fileds: token (JWT) and user object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { 
                      "type": "string",
                      "description": "This token will be used by routes that need it. Store it in the user's browser.",
                      "example": "fadsf879a8f79da7fs897df987ads9f7d98a7f" 
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id of user in database.",
                          "example": "123"
                        },
                        "full_name": {
                          "type": "string",
                          "description": "You need to get the user's name for all submission actions.",
                          "example": null
                        },
                        "tel": {
                          "type": "string",
                          "description": "User's phone number.",
                          "example": "09120000000"
                        },
                        "email": {
                          "type": "string",
                          "description": "User's email.",
                          "example": null
                        },
                        "birthday": {
                          "type": "string",
                          "description": "This field is a Date(). It's converted to string by prisma so you may want to convert it back: new Date(birthday).",
                          "example": null
                        },
                        "credit_card_num": {
                          "type": "string",
                          "description": "User's credit card number.",
                          "example": null
                        },
                        "national_id": {
                          "type": "string",
                          "description": "User's national id.",
                          "example": null
                        },
                        "profile_pic_url": {
                          "type": "string",
                          "description": "This is a relative path to the image web address. Use it like this: \"{api-url}/img/{profile_pic_url}\".",
                          "example": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The inputs are probably incorrect. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "security": [
          { "apikey": [ "apikey" ]}
        ],
        "description": "This route is used for user login.",
        "summary": "User login",
        "requestBody": {
          "description": "The \"tel\" field must contain 11 characters.",
          "content": {
            "body": {
              "schema": {
                "type": "object",
                "properties": {
                  "tel": {
                    "description": "This field must contain 11 characters",
                    "type": "string",
                    "example": "09120000000"
                  },
                  "password": {
                    "type": "string",
                    "example": "someRand0mPa33"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response has 2 fields: \"token\" (JWT) and \"user\". You need to store the token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "This the JWT. You need to store it in the browser for further usecases.",
                      "example": "a8f7d7f8ds8afd78f8ad8f78adsf8dadaf9sd8fa"
                    },
                    "user": {
                      "type": "object",
                      "description": "The values of these object properties depends on how complete the user's profile is. Apart from \"tel\" field, the rest could be null.",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id of user in database.",
                          "example": "123"
                        },
                        "full_name": {
                          "type": "string",
                          "description": "User's full name. Needed for submission actions like writing a comments.",
                          "example": "Jack Nicholson"
                        },
                        "tel": {
                          "type": "string",
                          "description": "User's phone number.",
                          "example": "09120000000"
                        },
                        "email": {
                          "type": "string",
                          "description": "User's email.",
                          "example": "jack@example.com"
                        },
                        "birthday": {
                          "type": "string",
                          "description": "This field is a Date(). It's converted to string by prisma so you may want to convert it back: new Date(birthday).",
                          "example": "Sat Feb 04 2023 23:12:12 GMT+0330"
                        },
                        "credit_card_num": {
                          "type": "string",
                          "description": "User's credit card number.",
                          "example": "1234123412341234"
                        },
                        "national_id": {
                          "type": "string",
                          "description": "User's national id.",
                          "example": "00000000000"
                        },
                        "profile_pic_url": {
                          "type": "string",
                          "description": "This is a relative path to the image web address. Use it like this: \"{api-url}/img/{profile_pic_url}\".",
                          "example": "/path/to/image"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The \"tel\" or \"password\" field is incorrect. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "400": {
            "description": "The inputs you provided are not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "summary": "Get user's information",
        "description": "Use this route for getting any information on user's profile.",
        "responses": {
          "200": {
            "description": "The values of these object properties depends on how complete the user's profile is. Apart from \"tel\" and \"id\" fields, the rest could be null.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id of user in database.",
                      "example": "123"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "User's full name. Needed for submission actions like writing a comments.",
                      "example": "Jack Nicholson"
                    },
                    "tel": {
                      "type": "string",
                      "description": "User's phone number.",
                      "example": "09120000000"
                    },
                    "email": {
                      "type": "string",
                      "description": "User's email.",
                      "example": "jack@example.com"
                    },
                    "birthday": {
                      "type": "string",
                      "description": "This field is a Date(). It's converted to string by prisma so you may want to convert it back: new Date(birthday).",
                      "example": "Sat Feb 04 2023 23:12:12 GMT+0330"
                    },
                    "credit_card_num": {
                      "type": "string",
                      "description": "User's credit card number.",
                      "example": "1234123412341234"
                    },
                    "national_id": {
                      "type": "string",
                      "description": "User's national id.",
                      "example": "00000000000"
                    },
                    "profile_pic_url": {
                      "type": "string",
                      "description": "This is a relative path to the image web address. Use it like this: \"{api-url}/img/{profile_pic_url}\".",
                      "example": "/path/to/image"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The JWT you provided is not valid. No error message will be provided."
          }
        }
      }
    },
    "/user/update": {
      "put": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "description": "Use this route to update user's profile information. You only need to send the fields you want to update, the rest of the fileds won't be updated.",
        "summary": "Update user's profile info",
        "requestBody": {
          "description": "These are all the fields you can provide. There's no need to provide them all, just the ones you need to update. Note that \"profile_pic_url\" can't be updated using this form. To update user's profile image, you need to send a PUT request to \"/user/profilePic/upload\".",
          "content": {
            "body": {
              "schema": {
                "type": "object",
                "properties": {
                  "full_name": {
                    "type": "string",
                    "example": "Jack Nicholson"
                  },
                  "tel": {
                    "type": "string",
                    "example": "09120000000",
                    "description": "If provided, it can't be empty and must contain 11 characters."
                  },
                  "email": {
                    "type": "string",
                    "example": "jack@example.com"
                  },
                  "birthday": {
                    "type": "string",
                    "example": "Sat Feb 04 2023 23:12:12 GMT+0330",
                    "description": "If provided, you should convert your Date to string."
                  },
                  "credit_card_num": {
                    "type": "string",
                    "example": "1234123412341234",
                    "description": "Must contain 16 characters."
                  },
                  "national_id": {
                    "type": "string",
                    "example": "0000000000",
                    "description": "Must contain 10 characters"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response object contains \"token\" and \"user\" object properties. If the \"tel\" field was provided in the request body, you have to store the token, otherwise it's up to you (it's better you store it, since it's fresh and therefore the user has 90 days of logged in status).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "This the JWT. You need to store it in the browser for further usecases.",
                      "example": "a8f7d7f8ds8afd78f8ad8f78adsf8dadaf9sd8fa"
                    },
                    "user": {
                      "type": "object",
                      "description": "The values of these object properties depends on how complete the user's profile is. Apart from \"tel\" field, the rest could be null.",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id of user in database.",
                          "example": "123"
                        },
                        "full_name": {
                          "type": "string",
                          "description": "User's full name. Needed for submission actions like writing a comments.",
                          "example": "Jack Nicholson"
                        },
                        "tel": {
                          "type": "string",
                          "description": "User's phone number.",
                          "example": "09120000000"
                        },
                        "email": {
                          "type": "string",
                          "description": "User's email.",
                          "example": "jack@example.com"
                        },
                        "birthday": {
                          "type": "string",
                          "description": "This field is a Date(). It's converted to string by prisma so you may want to convert it back: new Date(birthday).",
                          "example": "Sat Feb 04 2023 23:12:12 GMT+0330"
                        },
                        "credit_card_num": {
                          "type": "string",
                          "description": "User's credit card number.",
                          "example": "1234123412341234"
                        },
                        "national_id": {
                          "type": "string",
                          "description": "User's national id.",
                          "example": "00000000000"
                        },
                        "profile_pic_url": {
                          "type": "string",
                          "description": "This is a relative path to the image web address. Use it like this: \"{api-url}/img/{profile_pic_url}\".",
                          "example": "/path/to/image"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The inputs you provided are not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "401": {
            "description": "The JWT you provided is not valid. No error message will be provided."
          }
        }
      }
    },
    "/user/resetPass": {
      "put": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "summary": "Reset user's password",
        "description": "Use this route to reset user's password. If the process is successful, an OK 200 response will be sent to you without any detail.",
        "requestBody": {
          "description": "\"newPass\" and \"repeatNewPass\" fields must be the same and contain at least 6 characters.",
          "content": {
            "body": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPass": {
                    "type": "string",
                    "example": "someRand0mPa33"
                  },
                  "newPass": {
                    "type": "string",
                    "description": "At least 6 characters.",
                    "example": "newRand0mPa33"
                  },
                  "repeatNewPass": {
                    "type": "string",
                    "description": "The same as \"newPass\" field.",
                    "example": "newRand0mPa33"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "The inputs you provided are not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "401": {
            "description": "The JWT you provided is not valid. No error message will be provided."
          }
        }
      }
    },
    "/user/profilePic/upload": {
      "put": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "summary": "Upload user's profile pic",
        "description": "The file has to be sent normally (not base64). File limitations: file size up to 2MB, supported formats are .jpg, .jpeg, .png, .webp. If the user has already uploaded a photo, it'll be deleted.",
        "requestBody": {
          "content": {
            "body": {
              "schema": {
                "type": "object",
                "properties": {
                  "img": {
                    "type": "image file",
                    "description": "The image file to upload."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If the upload is successful, the relative link to the image will be sent to you. You can use it as \"{baseURL}/img/{imageUrl}.",
            "content": {
              "application/json": {
                "example": "/path/to/image"
              }
            }
          },
          "400": {
            "description": "The file you uploaded is not valid against one of the specified limitations. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    },
    "/user/profilePic/remove": {
      "delete": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "summary": "Remove user's profile pic",
        "description": "You only need to provide the JWT. If the operation is successful, you'll get just an OK 200 response without any info.",
        "responses": {
          "200": {
            "description": "The profile pic is successfully removed."
          },
          "400": {
            "description": "User has not uploaded any profile pic. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "401": {
            "description": "The JWT you provided is not valid. No error message will be provided."
          }
        }
      }
    },
    "/img/{imageUrl}": {
      "get": {
        "security": [
          { "apikey": [ "apikey" ]}
        ],
        "summary": "Get image",
        "description": "You need to provide the url into \"{baseUrl}/img\" to get the image. You can provide \"height\" and \"width\" query values to get the image at the size you want.",
        "parameters": [
          {
            "name": "imageUrl",
            "in": "path",
            "description": "This is the url to the image given to you by server.",
            "required": true,
            "example": "/user/imageName"
          },
          {
            "name": "height",
            "in": "query",
            "allowEmptyValue": true,
            "example": "300"
          },
          {
            "name": "width",
            "in": "query",
            "allowEmptyValue": true,
            "example": "300"
          }
        ],
        "responses": {
          "200": {
            "description": "Request is accepted."
          },
          "404": {
            "description": "Image not found."
          }
        }
      }
    },
    "/admin/login": {
      "post": {
        "security": [
          { "apikey": [ "apikey" ]}
        ],
        "summary": "Admin login",
        "description": "Use this route for admins login. The response body will contain a \"token\" and a \"admin\" field (admin info). Store the token for further use.",
        "requestBody": {
          "description": "The tel field must contain 11 characters.",
          "content": {
            "body": {
              "schema": {
                "type": "object",
                "properties": {
                  "tel": {
                    "type": "string",
                    "example": "09000000000"
                  },
                  "password": {
                    "type": "string",
                    "example": "someRand0mPa33"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response contains two fields: \"token\" and \"admin\". You may want to store the token for further actions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "f9d7f9d7fd9a8f7d9as87fd98af7d9sf7d9as8f7d98s7af9d8s7fasf9da8s7fd987f9s8da7f98d7s9f"
                    },
                    "admin": {
                      "type": "object",
                      "properties": {
                        "id": { 
                          "type": "integer",
                          "example": 123 
                        },
                        "access_level": {
                          "type": "string",
                          "description": "Possible values: super, play, comment"
                        },
                        "full_name": {
                          "type": "string",
                          "example": "محمد کمالی"
                        },
                        "tel": {
                          "type": "string",
                          "example": "09000000000"
                        },
                        "email": {
                          "type": "string",
                          "example": "myemail@example.com"
                        },
                        "national_id": {
                          "type": "string",
                          "example": "0123456789"
                        },
                        "home_tel": {
                          "type": "string",
                          "example": "01234567890"
                        },
                        "full_address": {
                          "type": "string",
                          "example": "Iran, Tehran, Azadi sq."
                        },
                        "profile_pic_url": {
                          "type": "string",
                          "description": "This is a relative path to the image web address. Use it like this: \"{api-url}/img/{profile_pic_url}\".",
                          "example": "/path/to/image"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The \"tel\" or \"password\" field is incorrect. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "400": {
            "description": "The inputs you provided are not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    },
    "/admin/profile/{admin_id}": {
      "get": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "summary": "Get admin's profile",
        "description": "JWT must be provided. Normal admins can't get other admins profile info.",
        "parameters": [
          {
            "name": "admin_id",
            "in": "path",
            "example": 123,
            "description": "This parameter is optional: if it's present, that admin's profile info will be sent to the client, but if it's not, the current logged in admin's profile info will be sent."
          }
        ],
        "responses": {
          "200": {
            "description": "\"profile_pic_url\" will be null if the admin hasn't uploaded any image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 123 
                    },
                    "access_level": {
                      "type": "string",
                      "description": "Possible values: super, play, comment"
                    },
                    "full_name": {
                      "type": "string",
                      "example": "محمد کمالی"
                    },
                    "tel": {
                      "type": "string",
                      "example": "09000000000"
                    },
                    "email": {
                      "type": "string",
                      "example": "myemail@example.com"
                    },
                    "national_id": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "home_tel": {
                      "type": "string",
                      "example": "01234567890"
                    },
                    "full_address": {
                      "type": "string",
                      "example": "ایران، تهران، میدان آزادی"
                    },
                    "profile_pic_url": {
                      "type": "string",
                      "description": "This is a relative path to the image web address. Use it like this: \"{api-url}/img/{profile_pic_url}\".",
                      "example": "/path/to/image"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The JWT you provided is not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "403": {
            "description": "You are not authorized to access/take this resource/action. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    },
    "/admin/profile/all": {
      "get": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "summary": "Get all admins profiles",
        "description": "Normal admins can't get other admins profile info. This route is for super admins only.",
        "responses": {
          "200": {
            "description": "The response would be an array of admins profile info (the schema below is an example of an admin's profile). \"profile_pic_url\" will be null if the admin hasn't uploaded any image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 123 
                    },
                    "access_level": {
                      "type": "string",
                      "description": "Possible values: super, play, comment"
                    },
                    "full_name": {
                      "type": "string",
                      "example": "محمد کمالی"
                    },
                    "tel": {
                      "type": "string",
                      "example": "09000000000"
                    },
                    "email": {
                      "type": "string",
                      "example": "myemail@example.com"
                    },
                    "national_id": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "home_tel": {
                      "type": "string",
                      "example": "01234567890"
                    },
                    "full_address": {
                      "type": "string",
                      "example": "ایران، تهران، میدان آزادی"
                    },
                    "profile_pic_url": {
                      "type": "string",
                      "description": "This is a relative path to the image web address. Use it like this: \"{api-url}/img/{profile_pic_url}\".",
                      "example": "/path/to/image"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The JWT you provided is not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "403": {
            "description": "You are not authorized to access/take this resource/action. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    },
    "/admin/create": {
      "post": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "summary": "Create admin by super admin",
        "description": "Only the admins with \"super\" access level can send a request to this route.",
        "requestBody": {
          "description": "All the fields are needed. \"access_level\" can have one of \"play\" or \"comment\" values.",
          "content": {
            "body": {
              "schema": {
                "properties": {
                  "access_level": {
                    "type": "string",
                    "description": "Allowed values: play and comment.",
                    "example": "play"
                  },
                  "full_name": {
                    "type": "string",
                    "example": "محمد کمالی"
                  },
                  "tel": {
                    "type": "string",
                    "description": "This field must contain 11 characters.",
                    "example": "09000000000"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password must contain at least 8 characters.",
                    "example": "someRand0mPa33"
                  },
                  "repeatPass": {
                    "type": "string",
                    "description": "This field must be the same as \"password\".",
                    "example": "someRand0mPa33"
                  },
                  "email": {
                    "type": "string",
                    "example": "myemail@example.com"
                  },
                  "national_id": {
                    "type": "string",
                    "description": "This field must contain 10 characters.",
                    "example": "0123456789"
                  },
                  "home_tel": {
                    "type": "string",
                    "description": "This field must contain 11 characters.",
                    "example": "01234567890"
                  },
                  "full_address": {
                    "type": "string",
                    "description": "This field must contain at least 10 characters.",
                    "example": "ایران، تهران، میدان آزادی"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"profile_pic_url\" will be null if the admin hasn't uploaded any image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 123 
                    },
                    "access_level": {
                      "type": "string",
                      "description": "Possible values: super, play, comment",
                      "example": "play"
                    },
                    "full_name": {
                      "type": "string",
                      "example": "محمد کمالی"
                    },
                    "tel": {
                      "type": "string",
                      "example": "09000000000"
                    },
                    "email": {
                      "type": "string",
                      "example": "myemail@example.com"
                    },
                    "national_id": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "home_tel": {
                      "type": "string",
                      "example": "01234567890"
                    },
                    "full_address": {
                      "type": "string",
                      "example": "ایران، تهران، میدان آزادی"
                    },
                    "profile_pic_url": {
                      "type": "string",
                      "description": "This is a relative path to the image web address. Use it like this: \"{api-url}/img/{profile_pic_url}\".",
                      "example": "/path/to/image"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The inputs you provided are not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "401": {
            "description": "The JWT you provided is not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    },
    "/admin/update/{admin_id}": {
      "put": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "summary": "Update an admin's info",
        "description": "Super admins can update normal admins info but not other super admins.",
        "parameters": [
          {
            "name": "admin_id",
            "in": "path",
            "example": 123,
            "description": "The admin_id of this route is optional: if it's present, that admin's profile info will be updated, but if it's not, the current logged in super admin's profile info will be updated. Super admins can update normal admins profie info."
          }
        ],
        "requestBody": {
          "description": "All the fields are needed. \"access_level\" can have one of \"play\" or \"comment\" values.",
          "content": {
            "body": {
              "schema": {
                "properties": {
                  "access_level": {
                    "type": "string",
                    "description": "Allowed values: play and comment. In case of a super admin, this field will be ignored.",
                    "example": "play"
                  },
                  "full_name": {
                    "type": "string",
                    "example": "محمد کمالی"
                  },
                  "tel": {
                    "type": "string",
                    "description": "This field must contain 11 characters.",
                    "example": "09000000000"
                  },
                  "email": {
                    "type": "string",
                    "example": "myemail@example.com"
                  },
                  "national_id": {
                    "type": "string",
                    "description": "This field must contain 10 characters.",
                    "example": "0123456789"
                  },
                  "home_tel": {
                    "type": "string",
                    "description": "This field must contain 11 characters.",
                    "example": "01234567890"
                  },
                  "full_address": {
                    "type": "string",
                    "description": "This field must contain at least 10 characters.",
                    "example": "ایران، تهران، میدان آزادی"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "\"profile_pic_url\" will be null if the admin hasn't uploaded any image.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 123 
                    },
                    "access_level": {
                      "type": "string",
                      "description": "Possible values: super, play, comment"
                    },
                    "full_name": {
                      "type": "string",
                      "example": "محمد کمالی"
                    },
                    "tel": {
                      "type": "string",
                      "example": "09000000000"
                    },
                    "email": {
                      "type": "string",
                      "example": "myemail@example.com"
                    },
                    "national_id": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "home_tel": {
                      "type": "string",
                      "example": "01234567890"
                    },
                    "full_address": {
                      "type": "string",
                      "example": "ایران، تهران، میدان آزادی"
                    },
                    "profile_pic_url": {
                      "type": "string",
                      "description": "This is a relative path to the image web address. Use it like this: \"{api-url}/img/{profile_pic_url}\".",
                      "example": "/path/to/image"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The JWT you provided is not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "403": {
            "description": "You are not authorized to access/take this resource/action. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "404": {
            "description": "No admin with the given admin_id is found. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    },
    "/admin/resetPass": {
      "put": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "summary": "Reset admin password",
        "description": "If the process is successful, an OK 200 response will be sent to you with no additional information.",
        "requestBody": {
          "description": "\"newPass\" and \"repeatNewPass\" fields must be the same and contain at least 8 characters.",
          "content": {
            "body": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPass": {
                    "type": "string",
                    "example": "someRand0mPa33"
                  },
                  "newPass": {
                    "type": "string",
                    "description": "At least 8 characters.",
                    "example": "newRand0mPa33"
                  },
                  "repeatNewPass": {
                    "type": "string",
                    "description": "The same as \"newPass\" field.",
                    "example": "newRand0mPa33"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "The inputs you provided are not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "401": {
            "description": "The JWT you provided is not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    },
    "/admin/profilePic/upload": {
      "put": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "summary": "Upload admin's profile pic",
        "description": "The file has to be sent normally (not base64). File limitations: file size up to 2MB, supported formats are .jpg, .jpeg, .png, .webp. If the user has already uploaded a photo, it'll be deleted.",
        "requestBody": {
          "content": {
            "body": {
              "schema": {
                "type": "object",
                "properties": {
                  "img": {
                    "type": "image file",
                    "description": "The image file to upload."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If the upload is successful, the relative link to the image will be sent to you. You can use it as \"{basaeURL}/img/{imageUrl}\".",
            "content": {
              "application/json": {
                "example": "/path/to/image"
              }
            }
          },
          "400": {
            "description": "The file you uploaded is not valid against one of the specified limitations. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "401": {
            "description": "The JWT you provided is not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    },
    "/admin/profilePic/remove": {
      "delete": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "summary": "Remove admin's profile pic",
        "description": "You only need to provide the JWT. If the operation is successful, you'll get just an OK 200 response without any info.",
        "responses": {
          "200": {
            "description": "The profile pic is successfully removed."
          },
          "400": {
            "description": "User has not uploaded any profile pic. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "401": {
            "description": "The JWT you provided is not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    },
    "/admin/userProfile/{user_id}/removeProfilePic": {
      "delete": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "summary": "Remove a user's profile pic by super admin",
        "description": "Super admins can remove users profile pic using this route. If the process is successful, an OK 200 response will be given to the client.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "example": 123
          }
        ],
        "responses": {
          "200": {
            "description": "The profile pic is successfully removed."
          },
          "401": {
            "description": "The JWT you provided is not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "403": {
            "description": "You are not authorized to access/take this resource/action. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "404": {
            "description": "No user with the given user_id is found. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    },
    "/admin/userProfile/{user_id}/setDefaultFullName": {
      "put": {
        "security": [
          { "apikey": [ "apikey" ]},
          { "jwt": [ "jwt" ]}
        ],
        "summary": "Set user's full name to a default value",
        "description": "This route can be used by super admins to set a default value (کاربر سینماتیکت) to a user's full name. If the process is successful, the default value will be given to the client.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "example": 123
          }
        ],
        "responses": {
          "200": {
            "description": "The full name is successfully set to default value.",
            "content": {
              "application/json": {
                "example": "کاربر سینماتیکت"
              }
            }
          },
          "401": {
            "description": "The JWT you provided is not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "403": {
            "description": "You are not authorized to access/take this resource/action. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "404": {
            "description": "No user with the given user_id is found. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }        
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "properties": {
                "name": { "type": "string" },
                "message": { "type": "string" }
              }
            }
          },
          "headers": { "type": "object" },
          "body": { "type": "object" },
          "parameters": { "type": "object" }
        }
      }
    },
    "securitySchemes": {
      "apikey": {
        "description": "The value of your api key must go inside a header named \"apikey\" on all request except for \"/getapikey\" route.",
        "name": "apikey",
        "type": "apiKey",
        "in": "header"
      },
      "jwt": {
        "description": "The value of your JWT must go inside \"Authorization\" header with the format of \"Bearer {token}\".",
        "type": "http",
        "scheme": "bearer"      }
    }
  },
  "security": [
    {
      "apikey": [ "apikey" ]
    },
    {
      "jwt": [ "jwt" ]
    }
  ]
}
