{
  "openapi": "3.0.0",
  "info": {
    "title": "Cinema Ticket Server API",
    "description": "This is a clone api of cinematicket.org. We tried to implement as many features as we can.",
    "contact": {
      "name": "Mahdi Hashemi",
      "url": "https://github.com/mahdiHash",
      "email": "mahdihashemi.code@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "localhost:12000/"
    }
  ],
  "paths": {
    "/getapikey": {
      "get": {
        "security": [{}],
        "description": "Get an api key from the server. You need to provide this key in \"apikey\" header of your requests headers.",
        "summary": "Api key for other requests",
        "operationId": "apikey",
        "responses": {
          "200": {
            "description": "key generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "flkajfdldfasfd8af9d8f9adsfd9af9d89fa9dsf9daf89d"
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "security": [
          { "apikey": ["apikey"] }
        ],
        "description": "This route is used for user signup.",
        "summary": "User signup",
        "requestBody": {
          "description": "The \"tel\" field must contain 11 characters and the \"password\" field must contain at least 6 characters. \"password\" and \"repeatPass\" fields must be the same.",
          "content": {
            "body": {
              "schema": {
                "type": "object",
                "properties": {
                  "tel": {
                    "type": "string",
                    "description": "This field must contain 11 characters.",
                    "example": "09120000000"
                  },
                  "password": {
                    "type": "string",
                    "description": "This field must contain at least 6 characters.",
                    "example": "someRand0mPa33"
                  },
                  "repeatPass": {
                    "type": "string",
                    "description": "This field must be the same as password field.",
                    "example": "someRand0mPa33"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response contains two fileds: token (JWT) and user object.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { 
                      "type": "string",
                      "description": "This token will be used by routes that need it. Store it in the user's browser.",
                      "example": "fadsf879a8f79da7fs897df987ads9f7d98a7f" 
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id of user in database.",
                          "example": "123"
                        },
                        "full_name": {
                          "type": "string",
                          "description": "You need to get the user's name for all submission actions.",
                          "example": null
                        },
                        "tel": {
                          "type": "string",
                          "description": "User's phone number.",
                          "example": "09120000000"
                        },
                        "email": {
                          "type": "string",
                          "description": "User's email.",
                          "example": null
                        },
                        "birthday": {
                          "type": "string",
                          "description": "This field is a Date(). It's converted to string by prisma so you may want to convert it back: new Date(birthday).",
                          "example": null
                        },
                        "credit_card_num": {
                          "type": "string",
                          "description": "User's credit card number.",
                          "example": null
                        },
                        "national_id": {
                          "type": "string",
                          "description": "User's national id.",
                          "example": null
                        },
                        "profile_pic_url": {
                          "type": "string",
                          "description": "This is a url to an image web address.",
                          "example": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The inputs are probably incorrect. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "security": [
          { "apikey": [ "apikey" ]}
        ],
        "description": "This route is used for user login.",
        "summary": "User login",
        "requestBody": {
          "description": "The \"tel\" field must contain 11 characters.",
          "content": {
            "body": {
              "schema": {
                "type": "object",
                "properties": {
                  "tel": {
                    "description": "This field must contain 11 characters",
                    "type": "string",
                    "example": "09120000000"
                  },
                  "password": {
                    "type": "array",
                    "example": "someRand0mPa33"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response has 2 fields: \"token\" (JWT) and \"user\". You need to store the token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "This the JWT. You need to store it in the browser for further usecases.",
                      "example": "a8f7d7f8ds8afd78f8ad8f78adsf8dadaf9sd8fa"
                    },
                    "user": {
                      "type": "object",
                      "description": "The values of these object properties depends on how complete the user's profile is. Apart from \"tel\" field, the rest could be null.",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id of user in database.",
                          "example": "123"
                        },
                        "full_name": {
                          "type": "string",
                          "description": "User's full name. Needed for submission actions like writing a comments.",
                          "example": "Jack Nicholson"
                        },
                        "tel": {
                          "type": "string",
                          "description": "User's phone number.",
                          "example": "09120000000"
                        },
                        "email": {
                          "type": "string",
                          "description": "User's email.",
                          "example": "jack@example.com"
                        },
                        "birthday": {
                          "type": "string",
                          "description": "This field is a Date(). It's converted to string by prisma so you may want to convert it back: new Date(birthday).",
                          "example": "Sat Feb 04 2023 23:12:12 GMT+0330"
                        },
                        "credit_card_num": {
                          "type": "string",
                          "description": "User's credit card number.",
                          "example": "1234123412341234"
                        },
                        "national_id": {
                          "type": "string",
                          "description": "User's national id.",
                          "example": "00000000000"
                        },
                        "profile_pic_url": {
                          "type": "string",
                          "description": "This is a url to the image web address.",
                          "example": "https://ik.imagekit.io/cinematicketClone/default-image.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1673641046262"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The \"tel\" or \"password\" field is incorrect. More information on the error will be sent to you on response. You can see the schema down this page."
          },
          "400": {
            "description": "The inputs you provided are not valid. More information on the error will be sent to you on response. You can see the schema down this page."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "required": [ "name", "code", "message" ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "properties": {
                "name": { "type": "string" },
                "message": { "type": "string" }
              }
            }
          },
          "code": { "type": "integer" },
          "headers": { "type": "object" },
          "body": { "type": "object" },
          "parameters": { "type": "object" }
        }
      }
    },
    "securitySchemes": {
      "apikey": {
        "description": "The value of your api key must go inside a header named \"apikey\" on all request except for \"/getapikey\" route.",
        "name": "apikey",
        "type": "apiKey",
        "in": "header"
      },
      "jwt": {
        "description": "The value of your JWT must go inside \"Athorization\" header with the format of \"Bearer {token}\".",
        "type": "http",
        "scheme": "bearer"      }
    }
  },
  "security": [
    {
      "apikey": [ "apikey" ]
    },
    {
      "jwt": [ "jwt" ]
    }
  ]
}
